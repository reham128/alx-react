{"ast":null,"code":"var _jsxFileName = \"/root/alx-react/0x04-React_inline_styling/task_2/dashboard/src/CourseList/CourseListRow.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CourseListRow = ({\n  isHeader,\n  textFirstCell,\n  textSecondCell\n}) => {\n  const rowStyle = {\n    backgroundColor: '#f5f5f5ab'\n  };\n  const headerStyle = {\n    backgroundColor: '#deb5b545'\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    style: rowStyle,\n    children: isHeader ? textSecondCell === null ? /*#__PURE__*/_jsxDEV(\"th\", {\n      colSpan: 2,\n      style: headerStyle,\n      children: textFirstCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        style: headerStyle,\n        children: textFirstCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        style: headerStyle,\n        children: textSecondCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: textFirstCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: textSecondCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = CourseListRow;\nCourseListRow.propTypes = {\n  isHeader: PropTypes.bool,\n  textFirstCell: PropTypes.string.isRequired,\n  textSecondCell: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nCourseListRow.defaultProps = {\n  isHeader: false,\n  textSecondCell: null\n};\nexport default CourseListRow;\nvar _c;\n$RefreshReg$(_c, \"CourseListRow\");","map":{"version":3,"names":["React","PropTypes","StyleSheet","css","jsxDEV","_jsxDEV","Fragment","_Fragment","CourseListRow","isHeader","textFirstCell","textSecondCell","rowStyle","backgroundColor","headerStyle","style","children","colSpan","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","bool","string","isRequired","oneOfType","number","defaultProps","$RefreshReg$"],"sources":["/root/alx-react/0x04-React_inline_styling/task_2/dashboard/src/CourseList/CourseListRow.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyleSheet, css } from \"aphrodite\";\n\nconst CourseListRow = ({ isHeader, textFirstCell, textSecondCell }) => {\n  const rowStyle = {\n    backgroundColor: '#f5f5f5ab',\n  };\n\n  const headerStyle = {\n    backgroundColor: '#deb5b545',\n  };\n\n  return (\n    <tr style={rowStyle}>\n      {isHeader ? (\n        textSecondCell === null ? (\n          <th colSpan={2} style={headerStyle}>\n            {textFirstCell}\n          </th>\n        ) : (\n          <>\n            <th style={headerStyle}>{textFirstCell}</th>\n            <th style={headerStyle}>{textSecondCell}</th>\n          </>\n        )\n      ) : (\n        <>\n          <td>{textFirstCell}</td>\n          <td>{textSecondCell}</td>\n        </>\n      )}\n    </tr>\n  );\n};\n\nCourseListRow.propTypes = {\n  isHeader: PropTypes.bool,\n  textFirstCell: PropTypes.string.isRequired,\n  textSecondCell: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nCourseListRow.defaultProps = {\n  isHeader: false,\n  textSecondCell: null,\n};\n\nexport default CourseListRow;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,EAAEC,GAAG,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,aAAa;EAAEC;AAAe,CAAC,KAAK;EACrE,MAAMC,QAAQ,GAAG;IACfC,eAAe,EAAE;EACnB,CAAC;EAED,MAAMC,WAAW,GAAG;IAClBD,eAAe,EAAE;EACnB,CAAC;EAED,oBACER,OAAA;IAAIU,KAAK,EAAEH,QAAS;IAAAI,QAAA,EACjBP,QAAQ,GACPE,cAAc,KAAK,IAAI,gBACrBN,OAAA;MAAIY,OAAO,EAAE,CAAE;MAACF,KAAK,EAAED,WAAY;MAAAE,QAAA,EAChCN;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,gBAELhB,OAAA,CAAAE,SAAA;MAAAS,QAAA,gBACEX,OAAA;QAAIU,KAAK,EAAED,WAAY;QAAAE,QAAA,EAAEN;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5ChB,OAAA;QAAIU,KAAK,EAAED,WAAY;QAAAE,QAAA,EAAEL;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eAC7C,CACH,gBAEDhB,OAAA,CAAAE,SAAA;MAAAS,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAKN;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBhB,OAAA;QAAAW,QAAA,EAAKL;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eACzB;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET,CAAC;AAACC,EAAA,GA9BId,aAAa;AAgCnBA,aAAa,CAACe,SAAS,GAAG;EACxBd,QAAQ,EAAER,SAAS,CAACuB,IAAI;EACxBd,aAAa,EAAET,SAAS,CAACwB,MAAM,CAACC,UAAU;EAC1Cf,cAAc,EAAEV,SAAS,CAAC0B,SAAS,CAAC,CAAC1B,SAAS,CAACwB,MAAM,EAAExB,SAAS,CAAC2B,MAAM,CAAC;AAC1E,CAAC;AAEDpB,aAAa,CAACqB,YAAY,GAAG;EAC3BpB,QAAQ,EAAE,KAAK;EACfE,cAAc,EAAE;AAClB,CAAC;AAED,eAAeH,aAAa;AAAC,IAAAc,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}