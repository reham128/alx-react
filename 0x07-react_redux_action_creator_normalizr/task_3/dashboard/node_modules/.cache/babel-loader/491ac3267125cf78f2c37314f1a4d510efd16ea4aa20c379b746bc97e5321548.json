{"ast":null,"code":"var _jsxFileName = \"/root/alx-react/0x05-react_state/task_4/dashboard/src/Notifications/Notifications.js\";\nimport React from 'react';\nimport PureComponent from 'react';\nimport closeIcon from '../assets/close-icon.png';\nimport NotificationItem from './NotificationItem';\nimport PropTypes from 'prop-types';\nimport NotificationItemShape from './NotificationItemShape';\nimport { StyleSheet, css } from 'aphrodite';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  'notification-wrapper': {\n    position: 'absolute',\n    right: '1rem',\n    margin: '1.4rem',\n    '@media (max-width: 568px)': {\n      width: '100%',\n      margin: '0'\n    }\n  },\n  Notifications: {\n    position: 'relative',\n    padding: '1rem',\n    border: '1px dashed #e0364b',\n    '@media (max-width: 568px)': {\n      fontSize: '20px',\n      position: 'absolute',\n      border: 'none',\n      top: '0',\n      width: '100%',\n      height: '100vh',\n      padding: '0',\n      background: '#fff'\n    }\n  },\n  menuItem: {\n    display: 'flex',\n    paddingBottom: '0.3rem',\n    justifyContent: 'end'\n  }\n});\nclass Notifications extends PureComponent {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const {\n      displayDrawer,\n      listNotifications,\n      handleDisplayDrawer,\n      handleHideDrawer,\n      markNotificationAsRead\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css(styles['notification-wrapper']),\n      children: [!displayDrawer && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css(styles.menuItem),\n        onClick: handleDisplayDrawer,\n        id: \"menuItem\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), displayDrawer && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css(styles.Notifications),\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: listNotifications !== null && listNotifications !== void 0 && listNotifications.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Here is the list of notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), listNotifications.map(({\n              id,\n              html,\n              type,\n              value\n            }) => /*#__PURE__*/_jsxDEV(NotificationItem, {\n              type: type,\n              value: value,\n              html: html,\n              id: id,\n              markAsRead: () => markNotificationAsRead(id)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"li\", {\n            \"data-notification-type\": \"default\",\n            children: \"No new notification for now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: 'none',\n            border: 'none',\n            position: 'absolute',\n            right: '.8rem',\n            top: '1rem',\n            cursor: 'pointer'\n          },\n          \"aria-label\": \"Close\",\n          onClick: handleHideDrawer,\n          id: \"close\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: closeIcon,\n            alt: \"closeIcon\",\n            width: \"18px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Notifications;","map":{"version":3,"names":["React","PureComponent","closeIcon","NotificationItem","PropTypes","NotificationItemShape","StyleSheet","css","jsxDEV","_jsxDEV","Fragment","_Fragment","styles","create","position","right","margin","width","Notifications","padding","border","fontSize","top","height","background","menuItem","display","paddingBottom","justifyContent","constructor","props","render","displayDrawer","listNotifications","handleDisplayDrawer","handleHideDrawer","markNotificationAsRead","className","children","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","length","map","html","type","value","markAsRead","style","cursor","src","alt"],"sources":["/root/alx-react/0x05-react_state/task_4/dashboard/src/Notifications/Notifications.js"],"sourcesContent":["import React from 'react';\nimport PureComponent from 'react';\nimport closeIcon from '../assets/close-icon.png';\nimport NotificationItem from './NotificationItem';\nimport PropTypes from 'prop-types';\nimport NotificationItemShape from './NotificationItemShape';\nimport { StyleSheet, css } from 'aphrodite';\n\n\nconst styles = StyleSheet.create({\n  'notification-wrapper': {\n    position: 'absolute',\n    right: '1rem',\n    margin: '1.4rem',\n    '@media (max-width: 568px)': {\n      width: '100%',\n      margin: '0',\n    },\n  },\n\n  Notifications: {\n    position: 'relative',\n    padding: '1rem',\n    border: '1px dashed #e0364b',\n    '@media (max-width: 568px)': {\n      fontSize: '20px',\n      position: 'absolute',\n      border: 'none',\n      top: '0',\n      width: '100%',\n      height: '100vh',\n      padding: '0',\n      background: '#fff',\n    },\n  },\n\n  menuItem: {\n    display: 'flex',\n    paddingBottom: '0.3rem',\n    justifyContent: 'end',\n  },\n});\n\nclass Notifications extends PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      displayDrawer,\n      listNotifications,\n      handleDisplayDrawer,\n      handleHideDrawer,\n      markNotificationAsRead,\n    } = this.props;\n\n    return (\n      <div className={css(styles['notification-wrapper'])}>\n        {!displayDrawer && (\n          <div\n            className={css(styles.menuItem)}\n            onClick={handleDisplayDrawer}\n            id='menuItem'\n          >\n            <p>Your notifications</p>\n          </div>\n        )}\n        {displayDrawer && (\n          <div className={css(styles.Notifications)}>\n            <ul>\n              {listNotifications?.length ? (\n                <>\n                  <p>Here is the list of notifications</p>\n                  {listNotifications.map(({ id, html, type, value }) => (\n                    <NotificationItem\n                      key={id}\n                      type={type}\n                      value={value}\n                      html={html}\n                      id={id}\n                      markAsRead={() => markNotificationAsRead(id)}\n                    />\n                  ))}\n                </>\n              ) : (\n                <li data-notification-type='default'>\n                  No new notification for now\n                </li>\n              )}\n            </ul>\n            <button\n              style={{\n                background: 'none',\n                border: 'none',\n                position: 'absolute',\n                right: '.8rem',\n                top: '1rem',\n                cursor: 'pointer',\n              }}\n              aria-label='Close'\n              onClick={handleHideDrawer}\n              id='close'\n            >\n              <img src={closeIcon} alt='closeIcon' width='18px' />\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Notifications;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}