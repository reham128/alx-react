{"ast":null,"code":"var _jsxFileName = \"/root/alx-react/0x04-React_inline_styling/task_1/dashboard/src/Notifications/Notifications.js\";\nimport React, { Component } from 'react';\nimport './Notifications.css';\nimport closeIcon from '../assets/close-icon.png';\nimport NotificationItem from './NotificationItem';\nimport PropTypes from 'prop-types';\nimport NotificationItemShape from './NotificationItemShape';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  Notifications: {\n    padding: \"2em\",\n    border: \"2px dashed red\"\n  },\n  menuItem: {\n    textAlign: \"right\"\n  },\n  \"notification-header\": {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  \"flex-area\": {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-end\"\n  }\n});\nclass Notifications extends React.Component {\n  constructor(props) {\n    super(props);\n    this.markAsRead = this.markAsRead.bind(this);\n  }\n  shouldComponentUpdate(nextProps) {\n    return nextProps.length > this.props.listNotifications.length;\n  }\n  markAsRead(id) {\n    console.log(`Notification ${id} has been marked as read`);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: this.props.displayDrawer ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css(styles[\"flex-area\"]),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: css(styles.menuItem),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css(styles.Notifications),\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: this.props.listNotifications && this.props.listNotifications.length > 0 ? this.props.listNotifications.map(({\n              id,\n              html,\n              type,\n              value\n            }) => /*#__PURE__*/_jsxDEV(NotificationItem, {\n              markAsRead: this.markAsRead,\n              type: type,\n              value: value,\n              html: html\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 23\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: css(styles[\"notification-header\"]),\n              children: [/*#__PURE__*/_jsxDEV(NotificationItem, {\n                value: \"No new notification for now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  border: \"none\",\n                  background: \"none\"\n                },\n                \"aria-label\": \"Close\",\n                onClick: console.log(\"Close button has been clicked\"),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  style: {\n                    display: \"inline\"\n                  },\n                  src: closeIcon,\n                  alt: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css(styles.menuItem),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n}\nNotifications.propTypes = {\n  displayDrawer: PropTypes.bool,\n  listNotifications: PropTypes.arrayOf(NotificationItemShape)\n};\nNotifications.defaultProps = {\n  displayDrawer: false,\n  listNotifications: []\n};\nexport default Notifications;","map":{"version":3,"names":["React","Component","closeIcon","NotificationItem","PropTypes","NotificationItemShape","jsxDEV","_jsxDEV","styles","StyleSheet","create","Notifications","padding","border","menuItem","textAlign","display","justifyContent","flexDirection","alignItems","constructor","props","markAsRead","bind","shouldComponentUpdate","nextProps","length","listNotifications","id","console","log","render","Fragment","children","displayDrawer","className","css","fileName","_jsxFileName","lineNumber","columnNumber","map","html","type","value","style","background","onClick","src","alt","propTypes","bool","arrayOf","defaultProps"],"sources":["/root/alx-react/0x04-React_inline_styling/task_1/dashboard/src/Notifications/Notifications.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './Notifications.css';\nimport closeIcon from '../assets/close-icon.png';\nimport NotificationItem from './NotificationItem';\nimport PropTypes from 'prop-types';\nimport NotificationItemShape from './NotificationItemShape';\n\n\nconst styles = StyleSheet.create({\n  Notifications: {\n    padding: \"2em\",\n    border: \"2px dashed red\",\n  },\n  menuItem: {\n    textAlign: \"right\",\n  },\n  \"notification-header\": {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  \"flex-area\": {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n  },\n});\n\nclass Notifications extends React.Component {\n  constructor(props) {\n    super(props);\n    this.markAsRead = this.markAsRead.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.length > this.props.listNotifications.length;\n  }\n\n  markAsRead(id) {\n    console.log(`Notification ${id} has been marked as read`);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.displayDrawer ? (\n          <div className={css(styles[\"flex-area\"])}>\n            <div className={css(styles.menuItem)}>\n              <p>Your notifications</p>\n            </div>\n            <div className={css(styles.Notifications)}>\n              <ul>\n                {this.props.listNotifications &&\n                  this.props.listNotifications.length > 0 ? (\n                  this.props.listNotifications.map(\n                    ({ id, html, type, value }) => (\n                      <NotificationItem\n                        key={id}\n                        markAsRead={this.markAsRead}\n                        type={type}\n                        value={value}\n                        html={html}\n                      />\n                    )\n                  )\n                ) : (\n                  <div className={css(styles[\"notification-header\"])}>\n                    <NotificationItem value=\"No new notification for now\" />\n                    <button\n                      style={{\n                        border: \"none\",\n                        background: \"none\",\n                      }}\n                      aria-label=\"Close\"\n                      onClick={console.log(\"Close button has been clicked\")}\n                    >\n                      <img\n                        style={{ display: \"inline\" }}\n                        src={closeIcon}\n                        alt=\"Close\"\n                      />\n                    </button>\n                  </div>\n                )}\n              </ul>\n            </div>\n          </div>\n        ) : (\n          <div className={css(styles.menuItem)}>\n            <p>Your notifications</p>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nNotifications.propTypes = {\n  displayDrawer: PropTypes.bool,\n  listNotifications: PropTypes.arrayOf(NotificationItemShape),\n};\n\nNotifications.defaultProps = {\n  displayDrawer: false,\n  listNotifications: [],\n};\n\nexport default Notifications;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}