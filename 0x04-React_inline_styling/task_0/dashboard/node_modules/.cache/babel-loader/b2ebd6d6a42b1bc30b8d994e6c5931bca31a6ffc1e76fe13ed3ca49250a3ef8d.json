{"ast":null,"code":"var _jsxFileName = \"/root/alx-react/0x03-React_component/task_2/dashboard/src/Notifications/Notifications.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Notifications extends Component {\n  constructor(props) {\n    super(props);\n    this.markAsRead = this.markAsRead.bind(this);\n  }\n  markAsRead(id) {\n    console.log(`Notification ${id} has been marked as read`);\n  }\n  render() {\n    const {\n      displayDrawer,\n      listNotifications\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menuItem\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), displayDrawer && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Notifications\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: listNotifications !== null && listNotifications !== void 0 && listNotifications.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Here is the list of notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 19\n            }, this), listNotifications.map(({\n              id,\n              html,\n              type,\n              value\n            }) => /*#__PURE__*/_jsxDEV(NotificationItem, {\n              type: type,\n              value: value,\n              html: html,\n              id: id,\n              markAsRead: this.markAsRead\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"li\", {\n            \"data-notification-type\": \"default\",\n            children: \"No new notification for now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: 'none',\n            border: 'none',\n            position: 'absolute',\n            right: '.8rem',\n            top: '1rem',\n            cursor: 'pointer'\n          },\n          \"aria-label\": \"Close\",\n          onClick: () => console.log('Close button has been clicked'),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: closeIcon,\n            alt: \"closeIcon\",\n            width: \"18px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n}\nNotifications.propTypes = {\n  displayDrawer: PropTypes.bool,\n  listNotifications: PropTypes.arrayOf(NotificationItemShape)\n};\nNotifications.defaultProps = {\n  displayDrawer: false,\n  listNotifications: []\n};\nexport default Notifications;","map":{"version":3,"names":["Notifications","Component","constructor","props","markAsRead","bind","id","console","log","render","displayDrawer","listNotifications","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_Fragment","map","html","type","value","NotificationItem","style","background","border","position","right","top","cursor","onClick","src","closeIcon","alt","width","propTypes","PropTypes","bool","arrayOf","NotificationItemShape","defaultProps"],"sources":["/root/alx-react/0x03-React_component/task_2/dashboard/src/Notifications/Notifications.js"],"sourcesContent":["class Notifications extends Component {\n  constructor(props) {\n    super(props);\n    this.markAsRead = this.markAsRead.bind(this);\n  }\n  markAsRead(id) {\n    console.log(`Notification ${id} has been marked as read`);\n  }\n  render() {\n    const { displayDrawer, listNotifications } = this.props;\n\n    return (\n      <div className='notification-wrapper'>\n        <div className='menuItem'>\n          <p>Your notifications</p>\n        </div>\n        {displayDrawer && (\n          <div className='Notifications'>\n            <ul>\n              {listNotifications?.length ? (\n                <>\n                  <p>Here is the list of notifications</p>\n                  {listNotifications.map(({ id, html, type, value }) => (\n                    <NotificationItem\n                      key={id}\n                      type={type}\n                      value={value}\n                      html={html}\n                      id={id}\n                      markAsRead={this.markAsRead}\n                    />\n                  ))}\n                </>\n              ) : (\n                <li data-notification-type='default'>\n                  No new notification for now\n                </li>\n              )}\n            </ul>\n            <button\n              style={{\n                background: 'none',\n                border: 'none',\n                position: 'absolute',\n                right: '.8rem',\n                top: '1rem',\n                cursor: 'pointer',\n              }}\n              aria-label='Close'\n              onClick={() => console.log('Close button has been clicked')}\n            >\n              <img src={closeIcon} alt='closeIcon' width='18px' />\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nNotifications.propTypes = {\n  displayDrawer: PropTypes.bool,\n  listNotifications: PropTypes.arrayOf(NotificationItemShape),\n};\n\nNotifications.defaultProps = {\n  displayDrawer: false,\n  listNotifications: [],\n};\n\nexport default Notifications;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}