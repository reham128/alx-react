{"ast":null,"code":"var _jsxFileName = \"/root/alx-react/0x04-React_inline_styling/task_1/dashboard/src/CourseList/CourseList.js\";\nimport React from 'react';\nimport CourseListRow from './CourseListRow';\nimport { StyleSheet, css } from 'aphrodite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseListRowHead = [{\n  cellOne: 'Available courses',\n  cellTwo: null,\n  isHeader: true\n}, {\n  cellOne: 'Course name',\n  cellTwo: 'Credit',\n  isHeader: true\n}];\nconst CourseList = ({\n  listCourses\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: css(styles.CourseList),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: CourseListRowHead.map((course, idx) => /*#__PURE__*/_jsxDEV(CourseListRow, {\n        textFirstCell: course.cellOne,\n        textSecondCell: course.cellTwo,\n        isHeader: course.isHeader\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: listCourses !== null && listCourses !== void 0 && listCourses.length ? listCourses.map(({\n        id,\n        name,\n        credit\n      }) => /*#__PURE__*/_jsxDEV(CourseListRow, {\n        textFirstCell: name,\n        textSecondCell: credit\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(CourseListRow, {\n        textFirstCell: \"No course available yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = CourseList;\nconst styles = StyleSheet.create({\n  CourseList: {\n    width: '100%',\n    marginTop: '0.6rem',\n    border: '1px solid #e8e8e8',\n    borderCollapse: 'collapse'\n  }\n});\nexport default CourseList;\nvar _c;\n$RefreshReg$(_c, \"CourseList\");","map":{"version":3,"names":["React","CourseListRow","StyleSheet","css","jsxDEV","_jsxDEV","CourseListRowHead","cellOne","cellTwo","isHeader","CourseList","listCourses","className","styles","children","map","course","idx","textFirstCell","textSecondCell","fileName","_jsxFileName","lineNumber","columnNumber","length","id","name","credit","_c","create","width","marginTop","border","borderCollapse","$RefreshReg$"],"sources":["/root/alx-react/0x04-React_inline_styling/task_1/dashboard/src/CourseList/CourseList.js"],"sourcesContent":["import React from 'react';\nimport CourseListRow from './CourseListRow';\nimport { StyleSheet, css } from 'aphrodite';\n\nconst CourseListRowHead = [\n  { cellOne: 'Available courses', cellTwo: null, isHeader: true },\n  { cellOne: 'Course name', cellTwo: 'Credit', isHeader: true },\n];\n\nconst CourseList = ({ listCourses }) => {\n  return (\n    <table className={css(styles.CourseList)}>\n      <thead>\n        {CourseListRowHead.map((course, idx) => (\n          <CourseListRow\n            key={idx}\n            textFirstCell={course.cellOne}\n            textSecondCell={course.cellTwo}\n            isHeader={course.isHeader}\n          />\n        ))}\n      </thead>\n      <tbody>\n        {listCourses?.length ? (\n          listCourses.map(({ id, name, credit }) => (\n            <CourseListRow\n              key={id}\n              textFirstCell={name}\n              textSecondCell={credit}\n            />\n          ))\n        ) : (\n          <CourseListRow textFirstCell='No course available yet' />\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nconst styles = StyleSheet.create({\n  CourseList: {\n    width: '100%',\n    marginTop: '0.6rem',\n    border: '1px solid #e8e8e8',\n    borderCollapse: 'collapse',\n  },\n});\n\nexport default CourseList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,UAAU,EAAEC,GAAG,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,iBAAiB,GAAG,CACxB;EAAEC,OAAO,EAAE,mBAAmB;EAAEC,OAAO,EAAE,IAAI;EAAEC,QAAQ,EAAE;AAAK,CAAC,EAC/D;EAAEF,OAAO,EAAE,aAAa;EAAEC,OAAO,EAAE,QAAQ;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAC9D;AAED,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EACtC,oBACEN,OAAA;IAAOO,SAAS,EAAET,GAAG,CAACU,MAAM,CAACH,UAAU,CAAE;IAAAI,QAAA,gBACvCT,OAAA;MAAAS,QAAA,EACGR,iBAAiB,CAACS,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,kBACjCZ,OAAA,CAACJ,aAAa;QAEZiB,aAAa,EAAEF,MAAM,CAACT,OAAQ;QAC9BY,cAAc,EAAEH,MAAM,CAACR,OAAQ;QAC/BC,QAAQ,EAAEO,MAAM,CAACP;MAAS,GAHrBQ,GAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIT,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRlB,OAAA;MAAAS,QAAA,EACGH,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEa,MAAM,GAClBb,WAAW,CAACI,GAAG,CAAC,CAAC;QAAEU,EAAE;QAAEC,IAAI;QAAEC;MAAO,CAAC,kBACnCtB,OAAA,CAACJ,aAAa;QAEZiB,aAAa,EAAEQ,IAAK;QACpBP,cAAc,EAAEQ;MAAO,GAFlBF,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGR,CACF,CAAC,gBAEFlB,OAAA,CAACJ,aAAa;QAACiB,aAAa,EAAC;MAAyB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACzD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACK,EAAA,GA5BIlB,UAAU;AA8BhB,MAAMG,MAAM,GAAGX,UAAU,CAAC2B,MAAM,CAAC;EAC/BnB,UAAU,EAAE;IACVoB,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE,mBAAmB;IAC3BC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAevB,UAAU;AAAC,IAAAkB,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}