{"ast":null,"code":"var _jsxFileName = \"/root/alx-react/0x02-react_props/task_2/dashboard/src/Notifications/Notifications.js\";\nimport React from 'react';\nimport './Notifications.css';\nimport { getLatestNotification } from '../utils/utils';\nimport closeIcon from '../assets/close-icon.png';\nimport NotificationItem from './NotificationItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Notifications\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Here is the list of notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        background: 'none',\n        border: 'none',\n        position: 'absolute',\n        right: '1.8rem',\n        top: '2rem',\n        cursor: 'pointer'\n      },\n      \"aria-label\": \"Close\",\n      onClick: () => console.log('Close button has been clicked'),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: closeIcon,\n        alt: \"closeIcon\",\n        width: \"18px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(NotificationItem, {\n        type: \"default\",\n        value: \"New course available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotificationItem, {\n        type: \"urgent\",\n        value: \"New resume available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotificationItem, {\n        type: \"urgent\",\n        html: getLatestNotification()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","getLatestNotification","closeIcon","NotificationItem","jsxDEV","_jsxDEV","Notifications","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","background","border","position","right","top","cursor","onClick","console","log","src","alt","width","type","value","html","_c","$RefreshReg$"],"sources":["/root/alx-react/0x02-react_props/task_2/dashboard/src/Notifications/Notifications.js"],"sourcesContent":["import React from 'react';\nimport './Notifications.css';\nimport { getLatestNotification } from '../utils/utils';\nimport closeIcon from '../assets/close-icon.png';\nimport NotificationItem from './NotificationItem';\n\nconst Notifications = () => {\n  return (\n    <div className='Notifications'>\n      <p>Here is the list of notifications</p>\n      <button\n        style={{\n          background: 'none',\n          border: 'none',\n          position: 'absolute',\n          right: '1.8rem',\n          top: '2rem',\n          cursor: 'pointer',\n        }}\n        aria-label='Close'\n        onClick={() => console.log('Close button has been clicked')}\n      >\n        <img src={closeIcon} alt='closeIcon' width='18px' />\n      </button>\n      <ul>\n        <NotificationItem type='default' value='New course available' />\n        <NotificationItem type='urgent' value='New resume available' />\n        <NotificationItem type='urgent' html={getLatestNotification()} />\n      </ul>\n    </div>\n  );\n};\n\nexport default Notifications;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAC5B,SAASC,qBAAqB,QAAQ,gBAAgB;AACtD,OAAOC,SAAS,MAAM,0BAA0B;AAChD,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,oBACED,OAAA;IAAKE,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BH,OAAA;MAAAG,QAAA,EAAG;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACxCP,OAAA;MACEQ,KAAK,EAAE;QACLC,UAAU,EAAE,MAAM;QAClBC,MAAM,EAAE,MAAM;QACdC,QAAQ,EAAE,UAAU;QACpBC,KAAK,EAAE,QAAQ;QACfC,GAAG,EAAE,MAAM;QACXC,MAAM,EAAE;MACV,CAAE;MACF,cAAW,OAAO;MAClBC,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAE;MAAAd,QAAA,eAE5DH,OAAA;QAAKkB,GAAG,EAAErB,SAAU;QAACsB,GAAG,EAAC,WAAW;QAACC,KAAK,EAAC;MAAM;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACTP,OAAA;MAAAG,QAAA,gBACEH,OAAA,CAACF,gBAAgB;QAACuB,IAAI,EAAC,SAAS;QAACC,KAAK,EAAC;MAAsB;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChEP,OAAA,CAACF,gBAAgB;QAACuB,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;MAAsB;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/DP,OAAA,CAACF,gBAAgB;QAACuB,IAAI,EAAC,QAAQ;QAACE,IAAI,EAAE3B,qBAAqB,CAAC;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACiB,EAAA,GAzBIvB,aAAa;AA2BnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}